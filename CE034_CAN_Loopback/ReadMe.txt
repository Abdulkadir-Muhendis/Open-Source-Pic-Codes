Readme File for Code Example:

Transmitting the message and receiving it back in the Loopback mode 
----------------------------------------------------------------------------------------------------------------


This file contains the following sections:
1. Hardware Requirements
2. Code Example Description
3. Folder Contents
4. Suggested Development Resources
5. Reconfiguring the project for a different dsPIC30F device
6. Revision History


1. Hardware Requirement:
----------------------------

The following boards are used for developing this code example

dsPICDEMGP 1.1PLUS Board 

The device used is dsPIC30F6014A

MPLLAB ICD2 Debugger/Programmer is used for debugging and running this code example.




2. Code Example Description:
----------------------------------------------------------------------------------------------------------------
If the Loopback mode is activated, the module will connect the internal transmit signal to the internal receive
signal at the module boundary. The transmit and receive pins revert to their port I/O function.

In this code example we have initialized the outdata registers with some values and then after initializing
the CAN module for the loop back mode we have transmitted the same data on the Tx Line , The same data is 
received in the Rx line in the loopback mode and after receiving it in the Rx Buffer we compare it with the
values what we have transferred from the outdata register , If the values are same then we switch on the LED
on Port D which is there on the Development Board .

The same is done with CAN1 and CAN2


How to set up the board and view the working of the code 

Place the dsPIC30F6014A PIM in the dsPICDEM 1.1GP Board and connect it to the ICD2 .After loading the code 
in the device the running the device , all the four LED on the board should turn on .

You can also observe the working using the Debugger , See that when you place the breakpoint after the 
receiving the data you will get the same data in the receive registers that you transmitted from the 
outdata registers.These registers can be viewed in the watch window of MPLAB IDE.

How to Calculate the value to NTq ,BRP 

                   FTq= N*FBAUD
 FBAUD = 1 MBPS so we have to select value for FTq and N

                   BRP = (FCAN/(2*FTq))-1
FCAN = 30MHZ,Since BRP has to be a valid Integer for Maximum speed the value of FTq has to be 15MHz
so BRP becomes 0 

                  N=15MHz/1Mbps =15

Since the value of N can vary between 8-25 according to the CAN Protocol it will depend on the CAN
Speed on which you are operating the bus and your Processor Frequecny
So with 30MHz and 1Mbps you can have maximum value of N as 15 .


3. Folder Contents:
-------------------
This folder contains the following sub-folders:
a. C:\Program Files\Microchip\MPLAB C30\support\gld
        This folder will have the device GLD file, it is used for building the project. 
	This file was provided with the MPLAB® C30 v3.00 toolsuite.

	The following file is used in this project - dsPIC30F6014A.gld

b. C:\Program Files\Microchip\MPLAB C30\support\h
        This folder contains C header files useful in building this
        project. Device register and bit definitions are provided in
        the *.h file that follows the device name. These files were provided
        with the MPLAB® C30 v3.00 toolsuite.

c. C:\Program Files\Microchip\MPLAB C30\lib
        This folder contains library archive files, which are a
        collection of precompiled object files. The file
        named "libpic30-coff.a" contains the C run-time start-up
        library. These file were provided with the
        MPLAB® C30 v3.00 toolsuite.

d. hex
        This folder contains three file types - coff, hex and map.
        These are files generated by the MPLAB® C30 toolsuite on build
        operation performed within MPLAB® IDE. The *.map file contains
        details on memory allocation for various variables, constants
        and dsPIC instructions specified in the source and library
        code. The *.hex file contains a binary file that may be
        programmed into the dsPIC device. The *.coff file contains
        a binary file that is used by MPLAB® IDE for simulation.

e. h
        This folder contains include files for the code example.
	
f. src
        This folder contains all the C source files (*.c)
	used in demonstrating the described example. This folder
        also contains a sub-folder named "obj" that stores compiled
        object files generated when the project is built.

	The following files are used in this project

    CAN_Loopback.c


4. Suggested Development Resources:
-----------------------------------
        a. MPLAB® IDE v7.60 or later
        b. MPLAB® C30 v3.00 or later
        c. MPLAB® ICD 2 R23 or later
        e. dsPICDEM1.1+ Demo board with dsPIC30F6014A controller


5. Reconfiguring the project for a different dsPIC30F device:
-------------------------------------------------------------
The Project/Workspace can be easily reconfigured for any dsPIC30F device.
Please use the following general guidelines:
        a. Change device selection within MPLAB® IDE to a dsPIC30F device of
        your choice by using the following menu option:
        MPLAB IDE>>Configure>>Select Device

        b. Provide the correct device linker script and header file for your
        device. Device linker scripts and header files are available in your
        MPLAB® C30 installation folder under:
        Device Linker Script-
                YourDrive:>Program Files\Microchip\MPLAB C30\support\gld
        Device C Header file-
                YourDrive:>Program Files\Microchip\MPLAB C30\support\h
        Device ASM Include file-
                YourDrive:>Program Files\Microchip\MPLAB C30\support\inc

        c. Provide the appropriate path to your MPLAB C30 support file locations
        using the menu option:
        MPLAB IDE>>Project>>Build Options>>Project

        d. Chose the development board applicable to your device. Some options
        are provided below:


        e. Re-build the MPLAB® project using the menu option:
        MPLAB IDE>>Project>>Build All

        f. Download the hex file into the device and run.

6. Revision History :
---------------------
        
