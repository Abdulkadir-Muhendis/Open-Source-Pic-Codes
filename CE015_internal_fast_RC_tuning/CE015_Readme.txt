
                              Readme File for Code Example:
                  CE015 - Dynamic tuning of Internal Fast RC Oscillator
                  -----------------------------------------------------

This file contains the following sections:
1. Code Example Description
2. Folder Contents
3. Suggested Development Resources
4. Reconfiguring the project for a different dsPIC30F device
5. Revision History


1. Code Example Description:
----------------------------
The dsPIC® Digital Signal Controllers feature an internal Fast RC (FRC) oscillator that is optionally routed via the PLL in many devices. The FRC oscillator is calibrated to be nominally 7.37MHz at the factory. For applications that need to tune the FRC oscillator to some value other than 7.37 MHz, special tuning bits are provided on-chip. The attached code example demonstrates how the FRC oscillator may be tuned for any dsPIC30F device in the General Purpose, Motor-Control and Sensor families.

The attached code example has 2 files - main.c and FRCtuning.c. The code example in the FRCtuning.c file provides a mechanism to tune the frequency of the FRC oscillator irrespective of the dsPIC30F device being used (and the oscillator system version implemented therein). The TUN bits (4 or more in number) reside in the OSCCON register in Oscillator System Version 1 and Version 2. In Oscillator System Version 3, the TUN bits are located in the OSCTUN register. The function in the FRCtuning.c file has the following prototype:

Function:       int FRC_Freq_Change(int)
Input:          signed int data type equal in the range [-8,+7]
Return:         RET_CODE_OSC_SUCCESS for valid FRC tuning request
                RET_CODE_OSC_ERROR for illegal FRC tuning request (i.e. values
                outside range [-8,+7])
Description:    This subroutine writes to TUN bits which are present in the
                OSCTUN register (for some devices) or the OSCCON register (for
                some other devices)

The code in the main.c file simply requests to tune the FRC to the maximum allowed limit (Nominal + 7 steps). The step size (in Hz) is provided in the device datasheets. It is usually 0.75% or 1.5% of the nominal value and cvaries per device.

2. Folder Contents:
-------------------
This folder contains the following sub-folders:
a. gld
        This folder contains a linker script file for the example project.
        This file is used for building the project for a 30F6014A device.
        This file simply includes the relevant device linker script, 
        "p30F6014A.gld" and the relevant MPLAB® C30 library files, 
        "libdsp-coff.a", "libc-coff.a", and "libm-coff.a" or 
        "libdsp-elf.a", "libc-elf.a", and "libm-elf.a" from their installed 
        location. 

b. h
        This folder contains C header files useful in building this
        project. Device register and bit definitions are provided in
        the "p30F6014A.h" file, which may be found in the installation folder
        of the MPLAB® C30 toolsuite.

c. hex
        This folder contains three file types - coff, hex and map.
        These are files generated by the MPLAB® C30 toolsuite on build
        operation performed within MPLAB® IDE. The *.map file contains
        details on memory allocation for various variables, constants
        and dsPIC30F instructions specified in the source and library
        code. The *.hex file contains a binary file that may be
        programmed into the dsPIC30F device. The *.coff file contains
        a binary file that is used by MPLAB® IDE for simulation.

d. src
        This folder contains all the C and Assembler source files (*.c,
        *.s) used in demonstrating the described example. This folder
        also contains a sub-folder named "obj" that stores compiled
        object files generated when the project is built.

3. Suggested Development Resources:
-----------------------------------
        a. dsPICDEM™ 1.1 Development Board (See below)
        b. dsPIC30F6014A Digital Signal Controller Plug-In Module (See below)

4. Reconfiguring the project for a different dsPIC30F device:
-------------------------------------------------------------
The Project/Workspace can be easily reconfigured for any dsPIC30F device.
Please use the following general guidelines:
        a. Change device selection within MPLAB® IDE to a dsPIC30F device of
        your choice by using the following menu option:
        MPLAB IDE>>Configure>>Select Device

        b. Provide the correct device linker script and header file for your
        device. Device linker scripts and header files are available in your
        MPLAB® C30 installation folder under:
        Device Linker Script-
                YourDrive:>Program Files\Microchip\MPLAB C30\support\gld
        Device C Header file-
                YourDrive:>Program Files\Microchip\MPLAB C30\support\h
        Device ASM Include file-
                YourDrive:>Program Files\Microchip\MPLAB C30\support\inc

        c. Provide the appropriate path to your MPLAB C30 support file locations
        using the menu option:
        MPLAB IDE>>Project>>Build Options>>Project

        d. Chose the development board applicable to your device. Some options
        are provided below:
        - dsPICDEM™ 2 Development Board supports:
          30F2010, 30F2011, 30F2012, 30F3010, 30F3011, 30F3012, 30F3013,
          30F3014, 30F4011, 30F4012, 30F4013

        - dsPICDEM™ 1.1 Development Board supports:
          30F5013, 30F6010, 30F6011, 30F6012, 30F6013, 30F6014,
          30F6011A, 30F6012A, 30F6013A, 30F6014A

        - dsPICDEM™ MC1 Development Board supports:
          30F6010, 30F6010A, 30F5016

        e. Re-build the MPLAB® project using the menu option:
        MPLAB IDE>>Project>>Build All

        f. Download the hex file into the device and run.

5. Revision History :
---------------------
        09/30/2005 - Initial Release of the Code Example
